@model Tutor_Connect.Models.Slot

@{
    ViewBag.Title = "AddSlot";
    string invalid = (string)ViewData["Invalid"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style type="text/css">
    label {
        width: 150px;
        display: block;
    }
</style>

<div>
    <h2 class="heading">ADD NEW SLOT</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="login-form">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group" style="align-content:center; align-items:center">
        @Html.LabelFor(model => model.moduleCode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.moduleCode, ViewBag.SelectModule as MultiSelectList, "--select module--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.moduleCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.date, new List<SelectListItem> { new SelectListItem { Text = "Monday", Value = "Monday", Selected=true},
new SelectListItem { Text = "Tuesday", Value = "Tuesday"}, new SelectListItem { Text = "Wednesday", Value = "Wednesday" },new SelectListItem { Text = "Thursday", Value = "Thursday"},
new SelectListItem { Text = "Friday", Value = "Friday" } }, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.startTime, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.startTime, new { @class = "form-control" }) -  @Html.EditorFor(model => model.endTime, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.startTime, "", new { @class = "text-danger" })
            @ViewBag.invalidTime
        </div>
    </div>
    <p style="color:red; font-weight:700">
        @invalid
    </p>

    <div class="form-group">
        @Html.LabelFor(model => model.TypeOfSlot, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.RadioButtonFor(model => model.TypeOfSlot, "Individual") Individual   @Html.RadioButtonFor(model => model.TypeOfSlot, "Group") Group
            @Html.ValidationMessageFor(model => model.TypeOfSlot, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group" style="margin-top:3em">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add" class="btn btn-register" style="width:150px" />
            <span class="btn-cancel" style="width: 150px; text-align: center; font-weight: 700;">
                @Html.ActionLink("   Cancel  ", "Profile", new { id = Model.tutorId }, new{style = "text-decoration:none; color:white",
               @class = "btn-cancel" })
            </span>
        </div>
       
    </div>
    

</div>
    }
</div>
