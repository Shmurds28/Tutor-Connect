@model Tutor_Connect.Models.Slot

@{
    ViewBag.Title = "UpdateSlots";
    string invalid = (string)ViewData["Invalid"];
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    label {
        width: 150px;
        display: block;
    }
</style>

<h2 class="heading">    MANAGE AVAILAIBLE SLOTS</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="login-form">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.slotId)


        <div class="form-group">
            @Html.LabelFor(model => model.tutorId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tutorId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tutorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.moduleCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.moduleCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.moduleCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.date, new List<SelectListItem> { new SelectListItem { Text = "Monday", Value = "Monday", Selected=true},
              new SelectListItem { Text = "Tuesday", Value = "Tuesday"}, new SelectListItem { Text = "Wednesday", Value = "Wednesday" },new SelectListItem { Text = "Thursday", Value = "Thursday"},
              new SelectListItem { Text = "Friday", Value = "Friday" } }, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.startTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.startTime, new { @class = "form-control" }) - @Html.EditorFor(model => model.endTime, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.startTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <p style="color:red; font-weight:700">
            @invalid
        </p>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeOfSlot, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.TypeOfSlot, "Individual") Individual   @Html.RadioButtonFor(model => model.TypeOfSlot, "Group") Group
                @Html.ValidationMessageFor(model => model.TypeOfSlot, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class=" form-group" style="margin-left:630px; margin-top:50px">
        <input type="submit" value="Save" class="btn-register" style="width:150px" />
        <span class="btn-cancel" style="width: 150px; text-align: center; font-weight: 700;">
            @Html.ActionLink("   Cancel  ", "Profile", new { id = int.Parse(Model.tutorId) }, new {style="text-decoration:none; color:white",
           @class = "btn-cancel" })
        </span>
    </div>
}
